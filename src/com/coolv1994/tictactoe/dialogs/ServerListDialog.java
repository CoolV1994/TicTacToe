package com.coolv1994.tictactoe.dialogs;

import com.coolv1994.tictactoe.Main;
import com.coolv1994.tictactoe.utils.ServerListUtils;

/**
 *
 * @author vinnie
 */
public class ServerListDialog extends javax.swing.JDialog {

    /**
     * Creates new form ServerListDialog
     */
    public ServerListDialog() {
        super(Main.gameFrame, true);
        Main.LOGGER.info("Initializing server list dialog...");
        initComponents();
        setLocationRelativeTo(Main.gameFrame);
    }

    public void reloadServerList() {
        Main.LOGGER.info("Loading server list...");
        serverList.setModel(ServerListUtils.downloadServerList());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JScrollPane scrollPane = new javax.swing.JScrollPane();
        serverList = new javax.swing.JList<String>();
        javax.swing.JButton joinButton = new javax.swing.JButton();
        javax.swing.JButton closeButton = new javax.swing.JButton();
        javax.swing.JLabel listLegend = new javax.swing.JLabel();
        javax.swing.JButton refreshButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Server List");

        serverList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Loading..." };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        serverList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scrollPane.setViewportView(serverList);

        joinButton.setText("Join Server");
        joinButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                joinButtonActionPerformed(evt);
            }
        });

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        listLegend.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        listLegend.setText("Server ID - Server Name");

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(closeButton)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(refreshButton)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(joinButton))
                    .addComponent(listLegend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(listLegend)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(joinButton)
                    .addComponent(closeButton)
                    .addComponent(refreshButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void joinButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_joinButtonActionPerformed
        if (serverList.getSelectedValue() == null) {
            return;
        }
        String id = String.valueOf(serverList.getSelectedValue());
        if (!id.contains(" - ")) {
            return;
        }
        id = id.substring(0, id.indexOf(" - "));
        String[] ip = ServerListUtils.getServerIP(id);
        if (ip == null) {
            Main.LOGGER.severe("Server offline.");
            return;
        }
        Main.setClientPanel(ip[0], Integer.parseInt(ip[1]));
        dispose();
    }//GEN-LAST:event_joinButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        reloadServerList();
    }//GEN-LAST:event_refreshButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> serverList;
    // End of variables declaration//GEN-END:variables
}
